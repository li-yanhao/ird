{
   "archive": {
      "enable_reconstruct": true,
      "files": {
         "input_0.png": "Input image"
      },
      "params": [
         "preproc"
      ]
   },
   "build": {
      "url": "git@github.com:li-yanhao/ird.git",
      "rev": "origin/ipol",
      "dockerfile": ".ipol/Dockerfile"
   },
   "general": {
      "timeout": 300,
      "demo_title": "Image resampling detection in Fourier domain",
      "requirements": "docker",
      "custom_js": "/demo/clientApp/static/333330010009/extras.js"
   },
   "inputs": [
      {
         "description": "Input",
         "dtype": "x",
         "ext": ".png",
         "max_pixels": "2000*2000",
         "required": true,
         "type": "image"
      }
   ],
   "params": [
      {
         "id": "apply_resize",
         "label": "<br>Apply resizing<br><br>",
         "comments": "Check for resizing the image before testing the algorithm",
         "type": "checkbox"
      },
      {
         "id": "r",
         "label": "Resizing Rate",
         "default_value": 1,
         "values": {
            "default": 1.3,
            "max": 8,
            "step": 0.01,
            "min": 0.1
         },
         "visible": "params.apply_resize",
         "type": "range"
      },
      {
         "id": "interp",
         "label": "Interpolator",
         "type": "selection_collapsed",
         "default_value": "bicubic",
         "values": {
            "nearest-neighbor": "nearest-neighbor",
            "bilinear": "bilinear",
            "bicubic": "bicubic",
            "lanczos": "lanczos"
         },
         "visible": "params.apply_resize"
      },
      {
         "id": "p",
         "label": "Preprocessing",
         "type": "selection_collapsed",
         "default_value": "rt",
         "values": {
            "none": "none",
            "phase only transform": "phot",
            "DCT denoise": "dct",
            "TV denoise": "tv",
            "rank transform": "rt"
         }
      }
   ],
   "results": [
      {
         "contents": {
            "input image": {
               "img": "input_0.png"
            },
            "preprocessed image": {
               "img": "preproc.png"
            },
            "result": {
               "img": "ipol_result.pdf"
            }
         },
         "label": "PCA based visualization",
         "type": "gallery"
      },
      {
         "contents": "stdout.txt",
         "label": "<p>Output</p>",
         "type": "text_file"
      }
   ],
   "run": "python $bin/.ipol/main_ipol.py input_0.png -p $p --apply_resize $apply_resize -r $r --interp $interp "
}